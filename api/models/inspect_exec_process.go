// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InspectExecProcess InspectExecProcess contains information about the process in a given exec
// session.
//
// swagger:model InspectExecProcess
type InspectExecProcess struct {

	// Arguments are the arguments to the entrypoint command of the exec
	// session.
	Arguments []string `json:"arguments"`

	// Entrypoint is the entrypoint for the exec session (the command that
	// will be executed in the container).
	Entrypoint string `json:"entrypoint,omitempty"`

	// Privileged is whether the exec session will be started with elevated
	// privileges.
	Privileged bool `json:"privileged,omitempty"`

	// Tty is whether the exec session created a terminal.
	Tty bool `json:"tty,omitempty"`

	// User is the user the exec session was started as.
	User string `json:"user,omitempty"`
}

// Validate validates this inspect exec process
func (m *InspectExecProcess) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this inspect exec process based on context it is used
func (m *InspectExecProcess) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InspectExecProcess) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InspectExecProcess) UnmarshalBinary(b []byte) error {
	var res InspectExecProcess
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
