// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ImageBuildOKBody image build o k body
//
// swagger:model imageBuildOKBody
type ImageBuildOKBody struct {

	// output from build process
	// Example: (build details...)\nSuccessfully built 8ba084515c724cbf90d447a63600c0a6\nSuccessfully tagged your_image:latest\n
	// Required: true
	Stream *string `json:"stream"`
}

// Validate validates this image build o k body
func (m *ImageBuildOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStream(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ImageBuildOKBody) validateStream(formats strfmt.Registry) error {

	if err := validate.Required("stream", "body", m.Stream); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this image build o k body based on context it is used
func (m *ImageBuildOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ImageBuildOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImageBuildOKBody) UnmarshalBinary(b []byte) error {
	var res ImageBuildOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
