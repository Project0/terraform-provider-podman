// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// NetworkDeleteLibpodReader is a Reader for the NetworkDeleteLibpod structure.
type NetworkDeleteLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkDeleteLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNetworkDeleteLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewNetworkDeleteLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNetworkDeleteLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNetworkDeleteLibpodOK creates a NetworkDeleteLibpodOK with default headers values
func NewNetworkDeleteLibpodOK() *NetworkDeleteLibpodOK {
	return &NetworkDeleteLibpodOK{}
}

/* NetworkDeleteLibpodOK describes a response with status code 200, with default header values.

Network rm
*/
type NetworkDeleteLibpodOK struct {
	Payload []*models.NetworkRmReport
}

func (o *NetworkDeleteLibpodOK) Error() string {
	return fmt.Sprintf("[DELETE /libpod/networks/{name}][%d] networkDeleteLibpodOK  %+v", 200, o.Payload)
}
func (o *NetworkDeleteLibpodOK) GetPayload() []*models.NetworkRmReport {
	return o.Payload
}

func (o *NetworkDeleteLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkDeleteLibpodNotFound creates a NetworkDeleteLibpodNotFound with default headers values
func NewNetworkDeleteLibpodNotFound() *NetworkDeleteLibpodNotFound {
	return &NetworkDeleteLibpodNotFound{}
}

/* NetworkDeleteLibpodNotFound describes a response with status code 404, with default header values.

No such network
*/
type NetworkDeleteLibpodNotFound struct {
	Payload *models.NetworkDeleteLibpodNotFoundBody
}

func (o *NetworkDeleteLibpodNotFound) Error() string {
	return fmt.Sprintf("[DELETE /libpod/networks/{name}][%d] networkDeleteLibpodNotFound  %+v", 404, o.Payload)
}
func (o *NetworkDeleteLibpodNotFound) GetPayload() *models.NetworkDeleteLibpodNotFoundBody {
	return o.Payload
}

func (o *NetworkDeleteLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDeleteLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkDeleteLibpodInternalServerError creates a NetworkDeleteLibpodInternalServerError with default headers values
func NewNetworkDeleteLibpodInternalServerError() *NetworkDeleteLibpodInternalServerError {
	return &NetworkDeleteLibpodInternalServerError{}
}

/* NetworkDeleteLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type NetworkDeleteLibpodInternalServerError struct {
	Payload *models.NetworkDeleteLibpodInternalServerErrorBody
}

func (o *NetworkDeleteLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /libpod/networks/{name}][%d] networkDeleteLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *NetworkDeleteLibpodInternalServerError) GetPayload() *models.NetworkDeleteLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *NetworkDeleteLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDeleteLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
