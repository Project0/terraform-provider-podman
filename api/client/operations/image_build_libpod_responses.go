// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImageBuildLibpodReader is a Reader for the ImageBuildLibpod structure.
type ImageBuildLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageBuildLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageBuildLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageBuildLibpodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageBuildLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageBuildLibpodOK creates a ImageBuildLibpodOK with default headers values
func NewImageBuildLibpodOK() *ImageBuildLibpodOK {
	return &ImageBuildLibpodOK{}
}

/* ImageBuildLibpodOK describes a response with status code 200, with default header values.

OK (As of version 1.xx)
*/
type ImageBuildLibpodOK struct {
	Payload *models.ImageBuildLibpodOKBody
}

func (o *ImageBuildLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/build][%d] imageBuildLibpodOK  %+v", 200, o.Payload)
}
func (o *ImageBuildLibpodOK) GetPayload() *models.ImageBuildLibpodOKBody {
	return o.Payload
}

func (o *ImageBuildLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageBuildLibpodOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageBuildLibpodBadRequest creates a ImageBuildLibpodBadRequest with default headers values
func NewImageBuildLibpodBadRequest() *ImageBuildLibpodBadRequest {
	return &ImageBuildLibpodBadRequest{}
}

/* ImageBuildLibpodBadRequest describes a response with status code 400, with default header values.

Bad parameter in request
*/
type ImageBuildLibpodBadRequest struct {
	Payload *models.ImageBuildLibpodBadRequestBody
}

func (o *ImageBuildLibpodBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/build][%d] imageBuildLibpodBadRequest  %+v", 400, o.Payload)
}
func (o *ImageBuildLibpodBadRequest) GetPayload() *models.ImageBuildLibpodBadRequestBody {
	return o.Payload
}

func (o *ImageBuildLibpodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageBuildLibpodBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageBuildLibpodInternalServerError creates a ImageBuildLibpodInternalServerError with default headers values
func NewImageBuildLibpodInternalServerError() *ImageBuildLibpodInternalServerError {
	return &ImageBuildLibpodInternalServerError{}
}

/* ImageBuildLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImageBuildLibpodInternalServerError struct {
	Payload *models.ImageBuildLibpodInternalServerErrorBody
}

func (o *ImageBuildLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/build][%d] imageBuildLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageBuildLibpodInternalServerError) GetPayload() *models.ImageBuildLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImageBuildLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageBuildLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
