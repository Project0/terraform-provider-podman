// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ExecStartLibpodReader is a Reader for the ExecStartLibpod structure.
type ExecStartLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExecStartLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExecStartLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewExecStartLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExecStartLibpodConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExecStartLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExecStartLibpodOK creates a ExecStartLibpodOK with default headers values
func NewExecStartLibpodOK() *ExecStartLibpodOK {
	return &ExecStartLibpodOK{}
}

/* ExecStartLibpodOK describes a response with status code 200, with default header values.

no error
*/
type ExecStartLibpodOK struct {
}

func (o *ExecStartLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/exec/{id}/start][%d] execStartLibpodOK ", 200)
}

func (o *ExecStartLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecStartLibpodNotFound creates a ExecStartLibpodNotFound with default headers values
func NewExecStartLibpodNotFound() *ExecStartLibpodNotFound {
	return &ExecStartLibpodNotFound{}
}

/* ExecStartLibpodNotFound describes a response with status code 404, with default header values.

No such exec instance
*/
type ExecStartLibpodNotFound struct {
	Payload *models.ExecStartLibpodNotFoundBody
}

func (o *ExecStartLibpodNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/exec/{id}/start][%d] execStartLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ExecStartLibpodNotFound) GetPayload() *models.ExecStartLibpodNotFoundBody {
	return o.Payload
}

func (o *ExecStartLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExecStartLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecStartLibpodConflict creates a ExecStartLibpodConflict with default headers values
func NewExecStartLibpodConflict() *ExecStartLibpodConflict {
	return &ExecStartLibpodConflict{}
}

/* ExecStartLibpodConflict describes a response with status code 409, with default header values.

container is not running.
*/
type ExecStartLibpodConflict struct {
}

func (o *ExecStartLibpodConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/exec/{id}/start][%d] execStartLibpodConflict ", 409)
}

func (o *ExecStartLibpodConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecStartLibpodInternalServerError creates a ExecStartLibpodInternalServerError with default headers values
func NewExecStartLibpodInternalServerError() *ExecStartLibpodInternalServerError {
	return &ExecStartLibpodInternalServerError{}
}

/* ExecStartLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ExecStartLibpodInternalServerError struct {
	Payload *models.ExecStartLibpodInternalServerErrorBody
}

func (o *ExecStartLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/exec/{id}/start][%d] execStartLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ExecStartLibpodInternalServerError) GetPayload() *models.ExecStartLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ExecStartLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExecStartLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
