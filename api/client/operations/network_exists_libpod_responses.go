// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// NetworkExistsLibpodReader is a Reader for the NetworkExistsLibpod structure.
type NetworkExistsLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkExistsLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNetworkExistsLibpodNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewNetworkExistsLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNetworkExistsLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNetworkExistsLibpodNoContent creates a NetworkExistsLibpodNoContent with default headers values
func NewNetworkExistsLibpodNoContent() *NetworkExistsLibpodNoContent {
	return &NetworkExistsLibpodNoContent{}
}

/* NetworkExistsLibpodNoContent describes a response with status code 204, with default header values.

network exists
*/
type NetworkExistsLibpodNoContent struct {
}

func (o *NetworkExistsLibpodNoContent) Error() string {
	return fmt.Sprintf("[GET /libpod/networks/{name}/exists][%d] networkExistsLibpodNoContent ", 204)
}

func (o *NetworkExistsLibpodNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetworkExistsLibpodNotFound creates a NetworkExistsLibpodNotFound with default headers values
func NewNetworkExistsLibpodNotFound() *NetworkExistsLibpodNotFound {
	return &NetworkExistsLibpodNotFound{}
}

/* NetworkExistsLibpodNotFound describes a response with status code 404, with default header values.

No such network
*/
type NetworkExistsLibpodNotFound struct {
	Payload *models.NetworkExistsLibpodNotFoundBody
}

func (o *NetworkExistsLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/networks/{name}/exists][%d] networkExistsLibpodNotFound  %+v", 404, o.Payload)
}
func (o *NetworkExistsLibpodNotFound) GetPayload() *models.NetworkExistsLibpodNotFoundBody {
	return o.Payload
}

func (o *NetworkExistsLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkExistsLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkExistsLibpodInternalServerError creates a NetworkExistsLibpodInternalServerError with default headers values
func NewNetworkExistsLibpodInternalServerError() *NetworkExistsLibpodInternalServerError {
	return &NetworkExistsLibpodInternalServerError{}
}

/* NetworkExistsLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type NetworkExistsLibpodInternalServerError struct {
	Payload *models.NetworkExistsLibpodInternalServerErrorBody
}

func (o *NetworkExistsLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/networks/{name}/exists][%d] networkExistsLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *NetworkExistsLibpodInternalServerError) GetPayload() *models.NetworkExistsLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *NetworkExistsLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkExistsLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
