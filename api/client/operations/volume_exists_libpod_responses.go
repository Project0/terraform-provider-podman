// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// VolumeExistsLibpodReader is a Reader for the VolumeExistsLibpod structure.
type VolumeExistsLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VolumeExistsLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewVolumeExistsLibpodNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewVolumeExistsLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVolumeExistsLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewVolumeExistsLibpodNoContent creates a VolumeExistsLibpodNoContent with default headers values
func NewVolumeExistsLibpodNoContent() *VolumeExistsLibpodNoContent {
	return &VolumeExistsLibpodNoContent{}
}

/* VolumeExistsLibpodNoContent describes a response with status code 204, with default header values.

volume exists
*/
type VolumeExistsLibpodNoContent struct {
}

func (o *VolumeExistsLibpodNoContent) Error() string {
	return fmt.Sprintf("[GET /libpod/volumes/{name}/exists][%d] volumeExistsLibpodNoContent ", 204)
}

func (o *VolumeExistsLibpodNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVolumeExistsLibpodNotFound creates a VolumeExistsLibpodNotFound with default headers values
func NewVolumeExistsLibpodNotFound() *VolumeExistsLibpodNotFound {
	return &VolumeExistsLibpodNotFound{}
}

/* VolumeExistsLibpodNotFound describes a response with status code 404, with default header values.

No such volume
*/
type VolumeExistsLibpodNotFound struct {
	Payload *models.VolumeExistsLibpodNotFoundBody
}

func (o *VolumeExistsLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/volumes/{name}/exists][%d] volumeExistsLibpodNotFound  %+v", 404, o.Payload)
}
func (o *VolumeExistsLibpodNotFound) GetPayload() *models.VolumeExistsLibpodNotFoundBody {
	return o.Payload
}

func (o *VolumeExistsLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeExistsLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeExistsLibpodInternalServerError creates a VolumeExistsLibpodInternalServerError with default headers values
func NewVolumeExistsLibpodInternalServerError() *VolumeExistsLibpodInternalServerError {
	return &VolumeExistsLibpodInternalServerError{}
}

/* VolumeExistsLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type VolumeExistsLibpodInternalServerError struct {
	Payload *models.VolumeExistsLibpodInternalServerErrorBody
}

func (o *VolumeExistsLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/volumes/{name}/exists][%d] volumeExistsLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *VolumeExistsLibpodInternalServerError) GetPayload() *models.VolumeExistsLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *VolumeExistsLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeExistsLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
