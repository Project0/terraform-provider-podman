// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// PodTopLibpodReader is a Reader for the PodTopLibpod structure.
type PodTopLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PodTopLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPodTopLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPodTopLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPodTopLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPodTopLibpodOK creates a PodTopLibpodOK with default headers values
func NewPodTopLibpodOK() *PodTopLibpodOK {
	return &PodTopLibpodOK{}
}

/* PodTopLibpodOK describes a response with status code 200, with default header values.

List processes in pod
*/
type PodTopLibpodOK struct {
	Payload *models.PodTopLibpodOKBody
}

func (o *PodTopLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/top][%d] podTopLibpodOK  %+v", 200, o.Payload)
}
func (o *PodTopLibpodOK) GetPayload() *models.PodTopLibpodOKBody {
	return o.Payload
}

func (o *PodTopLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodTopLibpodOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodTopLibpodNotFound creates a PodTopLibpodNotFound with default headers values
func NewPodTopLibpodNotFound() *PodTopLibpodNotFound {
	return &PodTopLibpodNotFound{}
}

/* PodTopLibpodNotFound describes a response with status code 404, with default header values.

No such pod
*/
type PodTopLibpodNotFound struct {
	Payload *models.PodTopLibpodNotFoundBody
}

func (o *PodTopLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/top][%d] podTopLibpodNotFound  %+v", 404, o.Payload)
}
func (o *PodTopLibpodNotFound) GetPayload() *models.PodTopLibpodNotFoundBody {
	return o.Payload
}

func (o *PodTopLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodTopLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodTopLibpodInternalServerError creates a PodTopLibpodInternalServerError with default headers values
func NewPodTopLibpodInternalServerError() *PodTopLibpodInternalServerError {
	return &PodTopLibpodInternalServerError{}
}

/* PodTopLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PodTopLibpodInternalServerError struct {
	Payload *models.PodTopLibpodInternalServerErrorBody
}

func (o *PodTopLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/top][%d] podTopLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *PodTopLibpodInternalServerError) GetPayload() *models.PodTopLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *PodTopLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodTopLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
