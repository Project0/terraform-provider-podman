// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ManifestExistsLibpodReader is a Reader for the ManifestExistsLibpod structure.
type ManifestExistsLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ManifestExistsLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewManifestExistsLibpodNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewManifestExistsLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewManifestExistsLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewManifestExistsLibpodNoContent creates a ManifestExistsLibpodNoContent with default headers values
func NewManifestExistsLibpodNoContent() *ManifestExistsLibpodNoContent {
	return &ManifestExistsLibpodNoContent{}
}

/* ManifestExistsLibpodNoContent describes a response with status code 204, with default header values.

manifest list exists
*/
type ManifestExistsLibpodNoContent struct {
}

func (o *ManifestExistsLibpodNoContent) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name}/exists][%d] manifestExistsLibpodNoContent ", 204)
}

func (o *ManifestExistsLibpodNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewManifestExistsLibpodNotFound creates a ManifestExistsLibpodNotFound with default headers values
func NewManifestExistsLibpodNotFound() *ManifestExistsLibpodNotFound {
	return &ManifestExistsLibpodNotFound{}
}

/* ManifestExistsLibpodNotFound describes a response with status code 404, with default header values.

No such manifest
*/
type ManifestExistsLibpodNotFound struct {
	Payload *models.ManifestExistsLibpodNotFoundBody
}

func (o *ManifestExistsLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name}/exists][%d] manifestExistsLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ManifestExistsLibpodNotFound) GetPayload() *models.ManifestExistsLibpodNotFoundBody {
	return o.Payload
}

func (o *ManifestExistsLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManifestExistsLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewManifestExistsLibpodInternalServerError creates a ManifestExistsLibpodInternalServerError with default headers values
func NewManifestExistsLibpodInternalServerError() *ManifestExistsLibpodInternalServerError {
	return &ManifestExistsLibpodInternalServerError{}
}

/* ManifestExistsLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ManifestExistsLibpodInternalServerError struct {
	Payload *models.ManifestExistsLibpodInternalServerErrorBody
}

func (o *ManifestExistsLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name}/exists][%d] manifestExistsLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ManifestExistsLibpodInternalServerError) GetPayload() *models.ManifestExistsLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ManifestExistsLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManifestExistsLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
