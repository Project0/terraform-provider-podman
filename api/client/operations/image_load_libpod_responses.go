// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImageLoadLibpodReader is a Reader for the ImageLoadLibpod structure.
type ImageLoadLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageLoadLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageLoadLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageLoadLibpodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageLoadLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageLoadLibpodOK creates a ImageLoadLibpodOK with default headers values
func NewImageLoadLibpodOK() *ImageLoadLibpodOK {
	return &ImageLoadLibpodOK{}
}

/* ImageLoadLibpodOK describes a response with status code 200, with default header values.

Load response
*/
type ImageLoadLibpodOK struct {
	Payload *models.ImageLoadReport
}

func (o *ImageLoadLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/images/load][%d] imageLoadLibpodOK  %+v", 200, o.Payload)
}
func (o *ImageLoadLibpodOK) GetPayload() *models.ImageLoadReport {
	return o.Payload
}

func (o *ImageLoadLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageLoadReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageLoadLibpodBadRequest creates a ImageLoadLibpodBadRequest with default headers values
func NewImageLoadLibpodBadRequest() *ImageLoadLibpodBadRequest {
	return &ImageLoadLibpodBadRequest{}
}

/* ImageLoadLibpodBadRequest describes a response with status code 400, with default header values.

Bad parameter in request
*/
type ImageLoadLibpodBadRequest struct {
	Payload *models.ImageLoadLibpodBadRequestBody
}

func (o *ImageLoadLibpodBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/images/load][%d] imageLoadLibpodBadRequest  %+v", 400, o.Payload)
}
func (o *ImageLoadLibpodBadRequest) GetPayload() *models.ImageLoadLibpodBadRequestBody {
	return o.Payload
}

func (o *ImageLoadLibpodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageLoadLibpodBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageLoadLibpodInternalServerError creates a ImageLoadLibpodInternalServerError with default headers values
func NewImageLoadLibpodInternalServerError() *ImageLoadLibpodInternalServerError {
	return &ImageLoadLibpodInternalServerError{}
}

/* ImageLoadLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImageLoadLibpodInternalServerError struct {
	Payload *models.ImageLoadLibpodInternalServerErrorBody
}

func (o *ImageLoadLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/images/load][%d] imageLoadLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageLoadLibpodInternalServerError) GetPayload() *models.ImageLoadLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImageLoadLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageLoadLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
