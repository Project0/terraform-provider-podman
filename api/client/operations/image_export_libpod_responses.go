// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImageExportLibpodReader is a Reader for the ImageExportLibpod structure.
type ImageExportLibpodReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *ImageExportLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageExportLibpodOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewImageExportLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageExportLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageExportLibpodOK creates a ImageExportLibpodOK with default headers values
func NewImageExportLibpodOK(writer io.Writer) *ImageExportLibpodOK {
	return &ImageExportLibpodOK{

		Payload: writer,
	}
}

/* ImageExportLibpodOK describes a response with status code 200, with default header values.

no error
*/
type ImageExportLibpodOK struct {
	Payload io.Writer
}

func (o *ImageExportLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] imageExportLibpodOK  %+v", 200, o.Payload)
}
func (o *ImageExportLibpodOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *ImageExportLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageExportLibpodNotFound creates a ImageExportLibpodNotFound with default headers values
func NewImageExportLibpodNotFound() *ImageExportLibpodNotFound {
	return &ImageExportLibpodNotFound{}
}

/* ImageExportLibpodNotFound describes a response with status code 404, with default header values.

No such image
*/
type ImageExportLibpodNotFound struct {
	Payload *models.ImageExportLibpodNotFoundBody
}

func (o *ImageExportLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] imageExportLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ImageExportLibpodNotFound) GetPayload() *models.ImageExportLibpodNotFoundBody {
	return o.Payload
}

func (o *ImageExportLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageExportLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageExportLibpodInternalServerError creates a ImageExportLibpodInternalServerError with default headers values
func NewImageExportLibpodInternalServerError() *ImageExportLibpodInternalServerError {
	return &ImageExportLibpodInternalServerError{}
}

/* ImageExportLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImageExportLibpodInternalServerError struct {
	Payload *models.ImageExportLibpodInternalServerErrorBody
}

func (o *ImageExportLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] imageExportLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageExportLibpodInternalServerError) GetPayload() *models.ImageExportLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImageExportLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageExportLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
