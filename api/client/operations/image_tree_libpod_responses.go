// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImageTreeLibpodReader is a Reader for the ImageTreeLibpod structure.
type ImageTreeLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageTreeLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageTreeLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewImageTreeLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageTreeLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageTreeLibpodOK creates a ImageTreeLibpodOK with default headers values
func NewImageTreeLibpodOK() *ImageTreeLibpodOK {
	return &ImageTreeLibpodOK{}
}

/* ImageTreeLibpodOK describes a response with status code 200, with default header values.

Tree response
*/
type ImageTreeLibpodOK struct {
	Payload *models.ImageTreeLibpodOKBody
}

func (o *ImageTreeLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/tree][%d] imageTreeLibpodOK  %+v", 200, o.Payload)
}
func (o *ImageTreeLibpodOK) GetPayload() *models.ImageTreeLibpodOKBody {
	return o.Payload
}

func (o *ImageTreeLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageTreeLibpodOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageTreeLibpodNotFound creates a ImageTreeLibpodNotFound with default headers values
func NewImageTreeLibpodNotFound() *ImageTreeLibpodNotFound {
	return &ImageTreeLibpodNotFound{}
}

/* ImageTreeLibpodNotFound describes a response with status code 404, with default header values.

No such image
*/
type ImageTreeLibpodNotFound struct {
	Payload *models.ImageTreeLibpodNotFoundBody
}

func (o *ImageTreeLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/tree][%d] imageTreeLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ImageTreeLibpodNotFound) GetPayload() *models.ImageTreeLibpodNotFoundBody {
	return o.Payload
}

func (o *ImageTreeLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageTreeLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageTreeLibpodInternalServerError creates a ImageTreeLibpodInternalServerError with default headers values
func NewImageTreeLibpodInternalServerError() *ImageTreeLibpodInternalServerError {
	return &ImageTreeLibpodInternalServerError{}
}

/* ImageTreeLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImageTreeLibpodInternalServerError struct {
	Payload *models.ImageTreeLibpodInternalServerErrorBody
}

func (o *ImageTreeLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/tree][%d] imageTreeLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageTreeLibpodInternalServerError) GetPayload() *models.ImageTreeLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImageTreeLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageTreeLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
