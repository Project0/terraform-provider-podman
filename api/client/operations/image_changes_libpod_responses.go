// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImageChangesLibpodReader is a Reader for the ImageChangesLibpod structure.
type ImageChangesLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageChangesLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageChangesLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewImageChangesLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageChangesLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageChangesLibpodOK creates a ImageChangesLibpodOK with default headers values
func NewImageChangesLibpodOK() *ImageChangesLibpodOK {
	return &ImageChangesLibpodOK{}
}

/* ImageChangesLibpodOK describes a response with status code 200, with default header values.

Array of Changes
*/
type ImageChangesLibpodOK struct {
}

func (o *ImageChangesLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/changes][%d] imageChangesLibpodOK ", 200)
}

func (o *ImageChangesLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImageChangesLibpodNotFound creates a ImageChangesLibpodNotFound with default headers values
func NewImageChangesLibpodNotFound() *ImageChangesLibpodNotFound {
	return &ImageChangesLibpodNotFound{}
}

/* ImageChangesLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type ImageChangesLibpodNotFound struct {
	Payload *models.ImageChangesLibpodNotFoundBody
}

func (o *ImageChangesLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/changes][%d] imageChangesLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ImageChangesLibpodNotFound) GetPayload() *models.ImageChangesLibpodNotFoundBody {
	return o.Payload
}

func (o *ImageChangesLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageChangesLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageChangesLibpodInternalServerError creates a ImageChangesLibpodInternalServerError with default headers values
func NewImageChangesLibpodInternalServerError() *ImageChangesLibpodInternalServerError {
	return &ImageChangesLibpodInternalServerError{}
}

/* ImageChangesLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImageChangesLibpodInternalServerError struct {
	Payload *models.ImageChangesLibpodInternalServerErrorBody
}

func (o *ImageChangesLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/images/{name}/changes][%d] imageChangesLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageChangesLibpodInternalServerError) GetPayload() *models.ImageChangesLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImageChangesLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImageChangesLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
