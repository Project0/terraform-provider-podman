// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ContainerTopReader is a Reader for the ContainerTop structure.
type ContainerTopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerTopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContainerTopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewContainerTopNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerTopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerTopOK creates a ContainerTopOK with default headers values
func NewContainerTopOK() *ContainerTopOK {
	return &ContainerTopOK{}
}

/* ContainerTopOK describes a response with status code 200, with default header values.

List processes in container
*/
type ContainerTopOK struct {
	Payload *models.ContainerTopOKBodyOAIGen
}

func (o *ContainerTopOK) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/top][%d] containerTopOK  %+v", 200, o.Payload)
}
func (o *ContainerTopOK) GetPayload() *models.ContainerTopOKBodyOAIGen {
	return o.Payload
}

func (o *ContainerTopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerTopOKBodyOAIGen)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerTopNotFound creates a ContainerTopNotFound with default headers values
func NewContainerTopNotFound() *ContainerTopNotFound {
	return &ContainerTopNotFound{}
}

/* ContainerTopNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerTopNotFound struct {
	Payload *models.ContainerTopNotFoundBody
}

func (o *ContainerTopNotFound) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/top][%d] containerTopNotFound  %+v", 404, o.Payload)
}
func (o *ContainerTopNotFound) GetPayload() *models.ContainerTopNotFoundBody {
	return o.Payload
}

func (o *ContainerTopNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerTopNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerTopInternalServerError creates a ContainerTopInternalServerError with default headers values
func NewContainerTopInternalServerError() *ContainerTopInternalServerError {
	return &ContainerTopInternalServerError{}
}

/* ContainerTopInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerTopInternalServerError struct {
	Payload *models.ContainerTopInternalServerErrorBody
}

func (o *ContainerTopInternalServerError) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/top][%d] containerTopInternalServerError  %+v", 500, o.Payload)
}
func (o *ContainerTopInternalServerError) GetPayload() *models.ContainerTopInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerTopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerTopInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
