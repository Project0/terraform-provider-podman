// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// PutContainerArchiveLibpodReader is a Reader for the PutContainerArchiveLibpod structure.
type PutContainerArchiveLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutContainerArchiveLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutContainerArchiveLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutContainerArchiveLibpodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutContainerArchiveLibpodForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutContainerArchiveLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutContainerArchiveLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutContainerArchiveLibpodOK creates a PutContainerArchiveLibpodOK with default headers values
func NewPutContainerArchiveLibpodOK() *PutContainerArchiveLibpodOK {
	return &PutContainerArchiveLibpodOK{}
}

/* PutContainerArchiveLibpodOK describes a response with status code 200, with default header values.

no error
*/
type PutContainerArchiveLibpodOK struct {
}

func (o *PutContainerArchiveLibpodOK) Error() string {
	return fmt.Sprintf("[PUT /libpod/containers/{name}/archive][%d] putContainerArchiveLibpodOK ", 200)
}

func (o *PutContainerArchiveLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutContainerArchiveLibpodBadRequest creates a PutContainerArchiveLibpodBadRequest with default headers values
func NewPutContainerArchiveLibpodBadRequest() *PutContainerArchiveLibpodBadRequest {
	return &PutContainerArchiveLibpodBadRequest{}
}

/* PutContainerArchiveLibpodBadRequest describes a response with status code 400, with default header values.

Bad parameter in request
*/
type PutContainerArchiveLibpodBadRequest struct {
	Payload *models.PutContainerArchiveLibpodBadRequestBody
}

func (o *PutContainerArchiveLibpodBadRequest) Error() string {
	return fmt.Sprintf("[PUT /libpod/containers/{name}/archive][%d] putContainerArchiveLibpodBadRequest  %+v", 400, o.Payload)
}
func (o *PutContainerArchiveLibpodBadRequest) GetPayload() *models.PutContainerArchiveLibpodBadRequestBody {
	return o.Payload
}

func (o *PutContainerArchiveLibpodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutContainerArchiveLibpodBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutContainerArchiveLibpodForbidden creates a PutContainerArchiveLibpodForbidden with default headers values
func NewPutContainerArchiveLibpodForbidden() *PutContainerArchiveLibpodForbidden {
	return &PutContainerArchiveLibpodForbidden{}
}

/* PutContainerArchiveLibpodForbidden describes a response with status code 403, with default header values.

the container rootfs is read-only
*/
type PutContainerArchiveLibpodForbidden struct {
}

func (o *PutContainerArchiveLibpodForbidden) Error() string {
	return fmt.Sprintf("[PUT /libpod/containers/{name}/archive][%d] putContainerArchiveLibpodForbidden ", 403)
}

func (o *PutContainerArchiveLibpodForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutContainerArchiveLibpodNotFound creates a PutContainerArchiveLibpodNotFound with default headers values
func NewPutContainerArchiveLibpodNotFound() *PutContainerArchiveLibpodNotFound {
	return &PutContainerArchiveLibpodNotFound{}
}

/* PutContainerArchiveLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type PutContainerArchiveLibpodNotFound struct {
	Payload *models.PutContainerArchiveLibpodNotFoundBody
}

func (o *PutContainerArchiveLibpodNotFound) Error() string {
	return fmt.Sprintf("[PUT /libpod/containers/{name}/archive][%d] putContainerArchiveLibpodNotFound  %+v", 404, o.Payload)
}
func (o *PutContainerArchiveLibpodNotFound) GetPayload() *models.PutContainerArchiveLibpodNotFoundBody {
	return o.Payload
}

func (o *PutContainerArchiveLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutContainerArchiveLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutContainerArchiveLibpodInternalServerError creates a PutContainerArchiveLibpodInternalServerError with default headers values
func NewPutContainerArchiveLibpodInternalServerError() *PutContainerArchiveLibpodInternalServerError {
	return &PutContainerArchiveLibpodInternalServerError{}
}

/* PutContainerArchiveLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PutContainerArchiveLibpodInternalServerError struct {
	Payload *models.PutContainerArchiveLibpodInternalServerErrorBody
}

func (o *PutContainerArchiveLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /libpod/containers/{name}/archive][%d] putContainerArchiveLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *PutContainerArchiveLibpodInternalServerError) GetPayload() *models.PutContainerArchiveLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *PutContainerArchiveLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutContainerArchiveLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
