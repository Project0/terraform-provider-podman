// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ContainerRestartLibpodReader is a Reader for the ContainerRestartLibpod structure.
type ContainerRestartLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerRestartLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewContainerRestartLibpodNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewContainerRestartLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerRestartLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerRestartLibpodNoContent creates a ContainerRestartLibpodNoContent with default headers values
func NewContainerRestartLibpodNoContent() *ContainerRestartLibpodNoContent {
	return &ContainerRestartLibpodNoContent{}
}

/* ContainerRestartLibpodNoContent describes a response with status code 204, with default header values.

no error
*/
type ContainerRestartLibpodNoContent struct {
}

func (o *ContainerRestartLibpodNoContent) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/restart][%d] containerRestartLibpodNoContent ", 204)
}

func (o *ContainerRestartLibpodNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContainerRestartLibpodNotFound creates a ContainerRestartLibpodNotFound with default headers values
func NewContainerRestartLibpodNotFound() *ContainerRestartLibpodNotFound {
	return &ContainerRestartLibpodNotFound{}
}

/* ContainerRestartLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerRestartLibpodNotFound struct {
	Payload *models.ContainerRestartLibpodNotFoundBody
}

func (o *ContainerRestartLibpodNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/restart][%d] containerRestartLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ContainerRestartLibpodNotFound) GetPayload() *models.ContainerRestartLibpodNotFoundBody {
	return o.Payload
}

func (o *ContainerRestartLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerRestartLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerRestartLibpodInternalServerError creates a ContainerRestartLibpodInternalServerError with default headers values
func NewContainerRestartLibpodInternalServerError() *ContainerRestartLibpodInternalServerError {
	return &ContainerRestartLibpodInternalServerError{}
}

/* ContainerRestartLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerRestartLibpodInternalServerError struct {
	Payload *models.ContainerRestartLibpodInternalServerErrorBody
}

func (o *ContainerRestartLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/restart][%d] containerRestartLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ContainerRestartLibpodInternalServerError) GetPayload() *models.ContainerRestartLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerRestartLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerRestartLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
