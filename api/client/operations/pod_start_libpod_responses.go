// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// PodStartLibpodReader is a Reader for the PodStartLibpod structure.
type PodStartLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PodStartLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPodStartLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewPodStartLibpodNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPodStartLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPodStartLibpodConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPodStartLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPodStartLibpodOK creates a PodStartLibpodOK with default headers values
func NewPodStartLibpodOK() *PodStartLibpodOK {
	return &PodStartLibpodOK{}
}

/* PodStartLibpodOK describes a response with status code 200, with default header values.

Start pod
*/
type PodStartLibpodOK struct {
	Payload *models.PodStartReport
}

func (o *PodStartLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/pods/{name}/start][%d] podStartLibpodOK  %+v", 200, o.Payload)
}
func (o *PodStartLibpodOK) GetPayload() *models.PodStartReport {
	return o.Payload
}

func (o *PodStartLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodStartReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodStartLibpodNotModified creates a PodStartLibpodNotModified with default headers values
func NewPodStartLibpodNotModified() *PodStartLibpodNotModified {
	return &PodStartLibpodNotModified{}
}

/* PodStartLibpodNotModified describes a response with status code 304, with default header values.

Pod already started
*/
type PodStartLibpodNotModified struct {
	Payload *models.PodStartLibpodNotModifiedBody
}

func (o *PodStartLibpodNotModified) Error() string {
	return fmt.Sprintf("[POST /libpod/pods/{name}/start][%d] podStartLibpodNotModified  %+v", 304, o.Payload)
}
func (o *PodStartLibpodNotModified) GetPayload() *models.PodStartLibpodNotModifiedBody {
	return o.Payload
}

func (o *PodStartLibpodNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodStartLibpodNotModifiedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodStartLibpodNotFound creates a PodStartLibpodNotFound with default headers values
func NewPodStartLibpodNotFound() *PodStartLibpodNotFound {
	return &PodStartLibpodNotFound{}
}

/* PodStartLibpodNotFound describes a response with status code 404, with default header values.

No such pod
*/
type PodStartLibpodNotFound struct {
	Payload *models.PodStartLibpodNotFoundBody
}

func (o *PodStartLibpodNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/pods/{name}/start][%d] podStartLibpodNotFound  %+v", 404, o.Payload)
}
func (o *PodStartLibpodNotFound) GetPayload() *models.PodStartLibpodNotFoundBody {
	return o.Payload
}

func (o *PodStartLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodStartLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodStartLibpodConflict creates a PodStartLibpodConflict with default headers values
func NewPodStartLibpodConflict() *PodStartLibpodConflict {
	return &PodStartLibpodConflict{}
}

/* PodStartLibpodConflict describes a response with status code 409, with default header values.

Start pod
*/
type PodStartLibpodConflict struct {
	Payload *models.PodStartReport
}

func (o *PodStartLibpodConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/pods/{name}/start][%d] podStartLibpodConflict  %+v", 409, o.Payload)
}
func (o *PodStartLibpodConflict) GetPayload() *models.PodStartReport {
	return o.Payload
}

func (o *PodStartLibpodConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodStartReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodStartLibpodInternalServerError creates a PodStartLibpodInternalServerError with default headers values
func NewPodStartLibpodInternalServerError() *PodStartLibpodInternalServerError {
	return &PodStartLibpodInternalServerError{}
}

/* PodStartLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PodStartLibpodInternalServerError struct {
	Payload *models.PodStartLibpodInternalServerErrorBody
}

func (o *PodStartLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/pods/{name}/start][%d] podStartLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *PodStartLibpodInternalServerError) GetPayload() *models.PodStartLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *PodStartLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PodStartLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
