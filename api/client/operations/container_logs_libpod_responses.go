// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ContainerLogsLibpodReader is a Reader for the ContainerLogsLibpod structure.
type ContainerLogsLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerLogsLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContainerLogsLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewContainerLogsLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerLogsLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerLogsLibpodOK creates a ContainerLogsLibpodOK with default headers values
func NewContainerLogsLibpodOK() *ContainerLogsLibpodOK {
	return &ContainerLogsLibpodOK{}
}

/* ContainerLogsLibpodOK describes a response with status code 200, with default header values.

logs returned as a stream in response body.
*/
type ContainerLogsLibpodOK struct {
}

func (o *ContainerLogsLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/logs][%d] containerLogsLibpodOK ", 200)
}

func (o *ContainerLogsLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContainerLogsLibpodNotFound creates a ContainerLogsLibpodNotFound with default headers values
func NewContainerLogsLibpodNotFound() *ContainerLogsLibpodNotFound {
	return &ContainerLogsLibpodNotFound{}
}

/* ContainerLogsLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerLogsLibpodNotFound struct {
	Payload *models.ContainerLogsLibpodNotFoundBody
}

func (o *ContainerLogsLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/logs][%d] containerLogsLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ContainerLogsLibpodNotFound) GetPayload() *models.ContainerLogsLibpodNotFoundBody {
	return o.Payload
}

func (o *ContainerLogsLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerLogsLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerLogsLibpodInternalServerError creates a ContainerLogsLibpodInternalServerError with default headers values
func NewContainerLogsLibpodInternalServerError() *ContainerLogsLibpodInternalServerError {
	return &ContainerLogsLibpodInternalServerError{}
}

/* ContainerLogsLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerLogsLibpodInternalServerError struct {
	Payload *models.ContainerLogsLibpodInternalServerErrorBody
}

func (o *ContainerLogsLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/logs][%d] containerLogsLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ContainerLogsLibpodInternalServerError) GetPayload() *models.ContainerLogsLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerLogsLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerLogsLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
