// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ImagePullLibpodReader is a Reader for the ImagePullLibpod structure.
type ImagePullLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagePullLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagePullLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagePullLibpodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagePullLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagePullLibpodOK creates a ImagePullLibpodOK with default headers values
func NewImagePullLibpodOK() *ImagePullLibpodOK {
	return &ImagePullLibpodOK{}
}

/* ImagePullLibpodOK describes a response with status code 200, with default header values.

Pull response
*/
type ImagePullLibpodOK struct {
	Payload *models.LibpodImagesPullReport
}

func (o *ImagePullLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/images/pull][%d] imagePullLibpodOK  %+v", 200, o.Payload)
}
func (o *ImagePullLibpodOK) GetPayload() *models.LibpodImagesPullReport {
	return o.Payload
}

func (o *ImagePullLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LibpodImagesPullReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagePullLibpodBadRequest creates a ImagePullLibpodBadRequest with default headers values
func NewImagePullLibpodBadRequest() *ImagePullLibpodBadRequest {
	return &ImagePullLibpodBadRequest{}
}

/* ImagePullLibpodBadRequest describes a response with status code 400, with default header values.

Bad parameter in request
*/
type ImagePullLibpodBadRequest struct {
	Payload *models.ImagePullLibpodBadRequestBody
}

func (o *ImagePullLibpodBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/images/pull][%d] imagePullLibpodBadRequest  %+v", 400, o.Payload)
}
func (o *ImagePullLibpodBadRequest) GetPayload() *models.ImagePullLibpodBadRequestBody {
	return o.Payload
}

func (o *ImagePullLibpodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImagePullLibpodBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagePullLibpodInternalServerError creates a ImagePullLibpodInternalServerError with default headers values
func NewImagePullLibpodInternalServerError() *ImagePullLibpodInternalServerError {
	return &ImagePullLibpodInternalServerError{}
}

/* ImagePullLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ImagePullLibpodInternalServerError struct {
	Payload *models.ImagePullLibpodInternalServerErrorBody
}

func (o *ImagePullLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/images/pull][%d] imagePullLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ImagePullLibpodInternalServerError) GetPayload() *models.ImagePullLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ImagePullLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImagePullLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
