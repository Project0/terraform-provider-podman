// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project0/terraform-provider-podman/api/models"
)

// ContainerExistsLibpodReader is a Reader for the ContainerExistsLibpod structure.
type ContainerExistsLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerExistsLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewContainerExistsLibpodNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewContainerExistsLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerExistsLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerExistsLibpodNoContent creates a ContainerExistsLibpodNoContent with default headers values
func NewContainerExistsLibpodNoContent() *ContainerExistsLibpodNoContent {
	return &ContainerExistsLibpodNoContent{}
}

/* ContainerExistsLibpodNoContent describes a response with status code 204, with default header values.

container exists
*/
type ContainerExistsLibpodNoContent struct {
}

func (o *ContainerExistsLibpodNoContent) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/exists][%d] containerExistsLibpodNoContent ", 204)
}

func (o *ContainerExistsLibpodNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContainerExistsLibpodNotFound creates a ContainerExistsLibpodNotFound with default headers values
func NewContainerExistsLibpodNotFound() *ContainerExistsLibpodNotFound {
	return &ContainerExistsLibpodNotFound{}
}

/* ContainerExistsLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerExistsLibpodNotFound struct {
	Payload *models.ContainerExistsLibpodNotFoundBody
}

func (o *ContainerExistsLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/exists][%d] containerExistsLibpodNotFound  %+v", 404, o.Payload)
}
func (o *ContainerExistsLibpodNotFound) GetPayload() *models.ContainerExistsLibpodNotFoundBody {
	return o.Payload
}

func (o *ContainerExistsLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerExistsLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerExistsLibpodInternalServerError creates a ContainerExistsLibpodInternalServerError with default headers values
func NewContainerExistsLibpodInternalServerError() *ContainerExistsLibpodInternalServerError {
	return &ContainerExistsLibpodInternalServerError{}
}

/* ContainerExistsLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerExistsLibpodInternalServerError struct {
	Payload *models.ContainerExistsLibpodInternalServerErrorBody
}

func (o *ContainerExistsLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/exists][%d] containerExistsLibpodInternalServerError  %+v", 500, o.Payload)
}
func (o *ContainerExistsLibpodInternalServerError) GetPayload() *models.ContainerExistsLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerExistsLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerExistsLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
